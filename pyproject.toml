[tool.poetry]
name = "olympics-ranking-medals"
version = "0"
description = "Play on attributed points per medal to change olympics ranking"
authors = ["Thomas Chauvet <thomas.chauvet@protonmail.com>"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.12"
streamlit = "^1.37.0"
pandas = "^2.2.2"
requests = "^2.32.3"
pydantic = "^2.8.2"
lxml = "^5.2.2"
pycountry = "^24.6.1"
matplotlib = "^3.9.1"
pyperclip = "^1.9.0"
watchdog = "^4.0.1"

[tool.poetry.group.dev.dependencies]
commitizen = "^3.12.0"
mypy = "^1.6.1"
pre-commit = "^3.5.0"
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
ruff = "^0.1.4"
types-pyyaml = "^6.0.12.12"
jupyter = "^1.0.0"

[tool.ruff]

extend-include = ["*.ipynb"]

ignore-init-module-imports = true

# Disable fix for unused imports (`F401`).
unfixable = ["F401"]

# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.12
target-version = "py312"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]

# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.pytest.ini_options]
addopts = "-ra -q"
testpaths = ["tests"]

[tool.coverage.run]
source = ['src']

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug:",
  "if settings.DEBUG",
  "raise AssertionError",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
  "import",
  "from",
]
omit = ["src/config/loader/*.py"]

[tool.mypy]
explicit_package_bases = true
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
exclude = []
plugins = []
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["dynaconf", "src"]
ignore_missing_imports = true

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "semver"
version_provider = "scm"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
